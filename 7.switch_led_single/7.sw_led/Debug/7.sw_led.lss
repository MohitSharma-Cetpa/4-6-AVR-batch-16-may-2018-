
7.sw_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ca  0000015e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  0000015e  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000160  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  0000082c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000008c3  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000020  00000000  00000000  000008f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000099  00000000  00000000  00000912  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000064  00000000  00000000  000009ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000000e1  00000000  00000000  00000a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000024  00000000  00000000  00000af0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000000ba  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00000bce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 63 00 	jmp	0xc6	; 0xc6 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:

int count=0;

int main(void)
{
  DDRA&=~(1<<PA0);//PAO as input 	
  7c:	d0 98       	cbi	0x1a, 0	; 26
  DDRA|=(1<<PA1)|(1<<PA7); // PA1 and PA7 as output
  7e:	8a b3       	in	r24, 0x1a	; 26
  80:	82 68       	ori	r24, 0x82	; 130
  82:	8a bb       	out	0x1a, r24	; 26
  PORTA|=(1<<PA1);//Status LED ON 
  84:	d9 9a       	sbi	0x1b, 1	; 27
	while(1)
    {
      if(PINA&(1<<PA0))
  86:	c8 9b       	sbis	0x19, 0	; 25
  88:	0b c0       	rjmp	.+22     	; 0xa0 <main+0x24>
       {
        ++count;
  8a:	80 91 60 00 	lds	r24, 0x0060
  8e:	90 91 61 00 	lds	r25, 0x0061
  92:	01 96       	adiw	r24, 0x01	; 1
  94:	90 93 61 00 	sts	0x0061, r25
  98:	80 93 60 00 	sts	0x0060, r24
		 while (PINA&(1<<PA0));//to avoid debounce condition
  9c:	c8 99       	sbic	0x19, 0	; 25
  9e:	fe cf       	rjmp	.-4      	; 0x9c <main+0x20>
	   }
	   if (count==1)
  a0:	80 91 60 00 	lds	r24, 0x0060
  a4:	90 91 61 00 	lds	r25, 0x0061
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	09 f4       	brne	.+2      	; 0xae <main+0x32>
	   {
		PORTA|=(1<<PA7);
  ac:	df 9a       	sbi	0x1b, 7	; 27
	   }
	   if(count==2)
  ae:	80 91 60 00 	lds	r24, 0x0060
  b2:	90 91 61 00 	lds	r25, 0x0061
  b6:	02 97       	sbiw	r24, 0x02	; 2
  b8:	31 f7       	brne	.-52     	; 0x86 <main+0xa>
	   {
	    PORTA&=~(1<<PA7);//LED off
  ba:	df 98       	cbi	0x1b, 7	; 27
	    count=0;
  bc:	10 92 61 00 	sts	0x0061, r1
  c0:	10 92 60 00 	sts	0x0060, r1
  c4:	e0 cf       	rjmp	.-64     	; 0x86 <main+0xa>

000000c6 <_exit>:
  c6:	f8 94       	cli

000000c8 <__stop_program>:
  c8:	ff cf       	rjmp	.-2      	; 0xc8 <__stop_program>
